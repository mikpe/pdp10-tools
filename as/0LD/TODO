section text
* subsection text0
** frag0, frag1, ... each being sth that generates object code
* subsection test1
** frag...
section data
* subsection data0
** frag...

array of sections (ELF allows user-defined ones)
a section is array of subsections, sorted and concatenated during output, ld sees no subsections
a subsection is array of fragments
a fragment describes a directive, an insn, a label defn

pass1 parses .s text, creates frags, and appends them to subsections

pass2 computes labels

pass3 outputs concatenated data in ELF form

helpers
* string table
* symbol table
* section table

copy ELF32 headers and use them throughout, esp. for symbol/section types etc

Look up section group and comdat in sco elf draft html pages.
