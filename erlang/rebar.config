%% -*- erlang -*-
%% rebar.config for pdp10-tools
%% Copyright (C) 2018-2023  Mikael Pettersson
%%
%% This file is part of pdp10-tools.
%%
%% pdp10-tools is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.
%%
%% pdp10-tools is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%%
%% You should have received a copy of the GNU General Public License
%% along with pdp10-tools.  If not, see <http://www.gnu.org/licenses/>.

{eunit_opts, [verbose, {report, {eunit_surefire, [{dir, "."}]}}]}.

{erl_opts, [ debug_info
           , warn_unused_vars
           , warn_shadow_vars
           , warn_unused_import
           , warn_obsolete_guard
           , warnings_as_errors
           ]}.

{deps, []}.

{xref_checks,
  [ undefined_function_calls
  , undefined_functions
  , locals_not_used
  , exports_not_used
  , deprecated_function_calls
  , deprecated_functions
  ]}.

%% silence xref unsed export warnings
{xref_ignores,
  [ %% escript entry points (rebar ought to know about these)
    {'8to9', main, 1}
  , {ar, main, 1}
  , {as, main, 1}
  , {elf2boot, main, 1}
  , {ld, main, 1}
  , {nm, main, 1}
  , {od, main, 1}
  , {readelf, main, 1}
  , {sim, main, 1}
    %% indirect calls to Module:format_error/1
  , {assemble, format_error, 1}
  , {elf2boot, format_error, 1}
  , {input, format_error, 1}
  , {ld, format_error, 1}
  , {ld_input, format_error, 1}
  , {ld_output, format_error, 1}
  , {libelf, format_error, 1}
  , {my_getopt, format_error, 1}
  , {output, format_error, 1}
  , {parse, format_error, 1}
  , {scan, format_error, 1}
  , {scan_state, format_error, 1}
  , {sim, format_error, 1}
  , {sim_core, format_error, 1}
  , {sim_loader, format_error, 1}
  , {stdio8, format_error, 1}
  , {stdio9, format_error, 1}
  , {strtol, format_error, 1}
    %% only called from tests
  , {sim_core, run, 2}
    %% actual unused exports
  , {extint, uint16_from_ext, 1}
  , {extint, uint16_to_ext, 1}
  , {extint, uint32_from_ext, 1}
  , {extint, uint32_to_ext, 1}
  , {extint, uint64_from_ext, 1}
  , {extint, uint64_to_ext, 1}
  , {libelf, read_PhTab, 4}
  , {pdp10_opcodes, cpu_device_from_name, 2}
  , {pdp10_opcodes, models_from_name, 1}
  , {sim_core, calculate_ea, 5}
  , {stdio8, fclose, 1}
  , {stdio8, fgetc, 1}
  , {stdio8, fopen, 2}
  , {stdio8, fputc, 2}
  , {stdio8, fputs, 2}
  , {stdio8, fread, 2}
  , {stdio8, fseek, 2}
  , {stdio8, ftell, 1}
  , {stdio8, stdin, 0}
  , {stdio8, stdout, 0}
  ]}.

{profiles, % append "-escript main <MainApp>" so the scripts work even if they are renamed (e.g. prefixed by pdp10-elf-)
  [ {'8to9',  [{escript_main_app, '8to9'},  {escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main 8to9\n"}]}
  , {ar,      [{escript_main_app, ar},      {escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main ar\n"}]}
  , {as,      [{escript_main_app, as},      {escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main as\n"}]}
  , {elf2boot,[{escript_main_app, elf2boot},{escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main elf2boot\n"}]}
  , {ld,      [{escript_main_app, ld},      {escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main ld\n"}]}
  , {nm,      [{escript_main_app, nm},      {escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main nm\n"}]}
  , {od,      [{escript_main_app, od},      {escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main od\n"}]}
  , {readelf, [{escript_main_app, readelf}, {escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main readelf\n"}]}
  , {sim,     [{escript_main_app, sim},     {escript_emu_args, "%%! +sbtu +A1 +Bd -noshell -smp auto -escript main sim\n"}]}
  ]}.
